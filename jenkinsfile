pipeline {
    agent any
   
    tools {
        nodejs 'Nodejs'
        Docker 'Docker'
   }

    environment {
        // Define environment variables here if needed
        DockerRepo-name = 'nunuokorie'
        EC2-IP = '34.239.130.152'
    }

    stages {
        stage('Checkout') {
            steps {
                echo "Checking out scm..."
                git branch: 'main', credentialsId: 'Git-credentials', url: 'https://github.com/Nunu86/my-forge-Bloom.git'
            }
        }

        stage('Install dependencies') {
            steps {
                echo "Installing dependencies..."
             sh 'npm install'
            }
        }
       
        stage('Test') {
            steps {
                echo "Running tests..."
                sh 'npm test'
            }
        }

        stage('Build') {
            steps {
                echo "Building the project..."
                // Add build commands here
                sh 'docker build -t ${DockerRepo-name}/${BUILD_ID}:${BUILD_NUMBER} .'
                
                }
        }

        stage('Push') {
            steps {
                echo "Pushing the project to remote repo..."
                // Add build commands here
                withCredentials([usernamePassword(credentialsId: 'docker-credentials', passwordVariable: 'PASS', usernameVariable: 'USER')]) {
                     sh "echo $PASS | docker login -u ${USER} --password-stdin"
                     sh "docker push ${DockerRepo-name}/${BUILD_ID}:${BUILD_NUMBER}"
        }
            }
        }

        
        stage('Deploy') {
            steps {
                echo "Deploying the application..."
                // Add deployment commands here
                sshagent(['EC2']) {
             sh "scp -o StrictHostKeyChecking=no ${dockerComposeFile} ubuntu@${EC2-IP}:/home/ubuntu"
             sh "ssh -o StrictHostKeyChecking=no ubuntu@${EC2-IP} docker run ${dockerComposeFile}"
            }
        }
    }

    post {
        always {
            echo "Cleaning up..."
            // Example: clean workspace
            // cleanWs()
        }
        success {
            echo "Build completed successfully!"
        }
        failure {
            echo "Build failed. Check logs!"
        }
    }
}
